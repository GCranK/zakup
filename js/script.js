document.addEventListener("DOMContentLoaded", () => {
    const tabs = document.querySelectorAll(".tab");
    const categoriesContainer = document.getElementById("categories");
    const productList = document.getElementById("productList");
    const sendButton = document.getElementById("sendData");
    const productsSection = document.getElementById("products");
    const loader = document.getElementById("loader");
    loader.style.display = "none";
    let selectedItems = {};
    let currentWarehouse = localStorage.getItem("selectedWarehouse") || "BAR";

    const products = {
        bar: {
            "–§—Ä—É–∫—Ç—ã/–æ–≤–æ—â–∏": ["–õ–∏–º–æ–Ω", "–Ø–±–ª–æ–∫–∏", "–ê–ø–µ–ª—å—Å–∏–Ω—ã", "–ú–æ—Ä–∫–æ–≤—å"],
            "–ó–µ–ª–µ–Ω—å": ["–ú—è—Ç–∞"],
            "–ë–∞–∫–∞–ª–µ—è": ["–°–∞—Ö–∞—Ä", "–ß–∞–π —á—ë—Ä–Ω—ã–π", "–ß–∞–π –∑–µ–ª—ë–Ω—ã–π"],
            "–ù–∞–ø–∏—Ç–∫–∏": ["–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω 0.5", "–ö–æ–ª–∞ 0.5", "–†–µ–¥ –ë—É–ª–ª 0.25"],
            "–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è": ["–ë—É–º–∞–≥–∞ –ê4", "–¢–µ—Ä–º–æ–±—É–º–∞–≥–∞ –¥–ª—è —á–µ–∫–æ–≤ –±–æ–ª—å—à–∞—è"],
            "–°–Ω–µ–∫–∏": ["–®–æ–∫–æ–ª–∞–¥ Alpen Gold", "–ß–æ–∫–æ–ø–∞–π", "–û—Ä–µ–æ", "–ë–∞—Ä–Ω–∏"]
        },
        kitchen: {
            "–ú—è—Å–æ": ["–ì–æ–≤—è–¥–∏–Ω–∞", "–ö—É—Ä–∏–Ω—ã–µ –±—ë–¥—Ä–∞", "–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ", "–ö—É—Ä–∏–Ω—ã–µ –≥–æ–ª–µ–Ω–∏"],
            "–û–≤–æ—â–∏": ["–ö—Ä–∞—Å–Ω–∞—è –º–æ—Ä–∫–æ–≤—å", "–ñ—ë–ª—Ç–∞—è –º–æ—Ä–∫–æ–≤—å", "–õ—É–∫", "–ö–∞—Ä—Ç–æ—à–∫–∞"],
            "–ó–µ–ª–µ–Ω—å": ["–õ–∞—Ç—É–∫", "–õ–æ–ª–ª–æ —Ä–æ—Å—Å–∞", "–ü–µ—Ç—Ä—É—à–∫–∞", "–£–∫—Ä–æ–ø", "–ö–∏–Ω–∑–∞", "–°–∞–ª–∞—Ç –ê–π—Å–±–µ—Ä–≥", "–ú—è—Ç–∞"],
            "–ö—Ä—É–ø—ã": ["–†–∏—Å –ª–∞–∑–µ—Ä", "–ö—Ä–∞—Å–Ω–∞—è —Ñ–∞—Å–æ–ª—å", "–§–µ—Ç—Ç—É—á–∏–Ω–∏"],
            "–•–ª–µ–±": ["–õ–µ–ø—ë—à–∫–∏"],
            "–ë–∞–∫–∞–ª–µ—è": ["–°–∞–ª–∞—Ç —á–∏–º—á–∏", "–ó–∏—Ä–∞", "–ù–∞–≤–∞—Ç—Ç –Ω–∞ –ø–∞–ª–æ—á–∫–µ"]
        },
        household: {
            "–•–æ–∑. —Ç–æ–≤–∞—Ä—ã": [
                "–ì–µ–ª—å –¥–ª—è –ø–æ—Å—É–¥—ã", "–ü–µ—Ä—á–∞—Ç–∫–∏ –∂—ë–ª—Ç—ã–µ –±–æ–ª—å—à–∏–µ", "–ü–∞–∫–µ—Ç—ã –¥–ª—è –º—É—Å–æ—Ä–∞ –±–æ–ª—å—à–∏–µ",
                "–ü–∞–∫–µ—Ç—ã –¥–ª—è –º—É—Å–æ—Ä–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ (50√ó65)", "–ì—É–±–∫–∏ –¥–ª—è –ø–æ—Å—É–¥—ã –±–æ–ª—å—à–∏–µ",
                "–ì—É–±–∫–∏ –¥–ª—è –ø–æ—Å—É–¥—ã –±–ª–µ—Å—Ç—è—â–∏–µ", "–ñ–∏–¥–∫–æ–µ –º—ã–ª–æ (5 –ª)", "–ê–∑–µ–ª–∏—Ç",
                "–¢—Ä—è–ø–∫–∏ —Ü–≤–µ—Ç–Ω—ã–µ", "–û—Ç–±–µ–ª–∏–≤–∞—Ç–µ–ª—å", "–î–∏—Å–ø–µ–Ω—Å–µ—Ä–∫–∏ (—Å–∞–ª—Ñ–µ—Ç–∫–∏)",
                "–¢—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞ –ø—Ä–æ—Å—Ç–∞—è"
            ]
        }
    };

    tabs.forEach(tab => {
        tab.addEventListener("click", function () {
            tabs.forEach(t => t.classList.remove("active"));
            this.classList.add("active");
            currentWarehouse = this.dataset.warehouse.toUpperCase();
            localStorage.setItem("selectedWarehouse", currentWarehouse);
            updateCategories(this.dataset.warehouse);
        });
    });

    function updateCategories(warehouse) {
        categoriesContainer.innerHTML = "";
        Object.keys(products[warehouse]).forEach(category => {
            const div = document.createElement("div");
            div.classList.add("category");
            div.dataset.category = category;
            div.innerHTML = `<i class="fas fa-box"></i><p>${category}</p>`;
            div.addEventListener("click", () => loadProducts(warehouse, category));
            categoriesContainer.appendChild(div);
        });
    }

    function loadProducts(warehouse, category) {
        productList.innerHTML = "";
        productsSection.classList.remove("hidden");

        products[warehouse][category].forEach(product => {
            const defaultUnit = category === "–§—Ä—É–∫—Ç—ã/–æ–≤–æ—â–∏" ? "–∫–≥" : "—à—Ç";
            const savedData = selectedItems[product] || { quantity: "", unit: defaultUnit };

            const li = document.createElement("li");
            li.innerHTML = `
                <div class="item-container">
                    <span class="product-name">${product}</span>
                    <input type="number" min="0" class="product-input" value="${savedData.quantity}" onfocus="this.value=''">
                    <select class="product-unit">
                        <option ${savedData.unit === "—à—Ç" ? "selected" : ""}>—à—Ç</option>
                        <option ${savedData.unit === "–∫–≥" ? "selected" : ""}>–∫–≥</option>
                        <option ${savedData.unit === "–≥—Ä" ? "selected" : ""}>–≥—Ä</option>
                        <option ${savedData.unit === "–ª" ? "selected" : ""}>–ª</option>
                    </select>
                </div>
            `;

            const input = li.querySelector(".product-input");
            const select = li.querySelector(".product-unit");

            input.addEventListener("input", () => saveSelection(product, category, input.value, select.value));
            select.addEventListener("change", () => saveSelection(product, category, input.value, select.value));

            productList.appendChild(li);
        });
    }

    function saveSelection(product, category, quantity, unit) {
        if (quantity > 0) {
            selectedItems[product] = { category, quantity, unit };
        } else {
            delete selectedItems[product];
        }
    }

    sendButton.addEventListener("click", () => {
        const items = Object.keys(selectedItems).map(name => ({
            name,
            category: selectedItems[name].category,
            quantity: selectedItems[name].quantity,
            unit: selectedItems[name].unit
        }));

        if (items.length === 0) {
            alert("‚ö†Ô∏è –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä—ã!");
            return;
        }

        console.log("üì¶ –ò—Ç–æ–≥–æ–≤—ã–π –∑–∞–∫–∞–∑:", { warehouse: currentWarehouse, items });
        loader.style.display = "flex";


        setTimeout(() => {
            fetch("https://frontend-developer.uz/sendzakup.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ warehouse: currentWarehouse, items })
            })
            .then(response => response.text())
            .then(data => {
                console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
                alert("‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
                setTimeout(() => {
                    loader.style.display = "none";
                    location.reload();
                }, 500);
            })
            .catch(error => {
                alert("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞!");
                console.error("–û—à–∏–±–∫–∞:", error);
                loader.style.display = "none";
            });
        }, 1000);
    });

    document.querySelector(`.tab[data-warehouse="${currentWarehouse.toLowerCase()}"]`).classList.add("active");
    updateCategories(currentWarehouse.toLowerCase());
});
