document.addEventListener("DOMContentLoaded", () => {
    const tabs = document.querySelectorAll(".tab");
    const categoriesContainer = document.getElementById("categories");
    const productList = document.getElementById("productList");
    const sendButton = document.getElementById("sendData");
    const productsSection = document.getElementById("products");
    const loader = document.getElementById("loader");
    loader.style.display = "none";
    let selectedItems = {};
    let currentWarehouse = localStorage.getItem("selectedWarehouse") || "BAR";

    const products = {
        bar: {
            "–§—Ä—É–∫—Ç—ã/–æ–≤–æ—â–∏": ["–õ–∏–º–æ–Ω", "–Ø–±–ª–æ–∫–∏", "–ê–ø–µ–ª—å—Å–∏–Ω—ã", "–ú–æ—Ä–∫–æ–≤—å", "–û–≥—É—Ä—Ü—ã", "–ú–∞–Ω–¥–∞—Ä–∏–Ω—ã", "–ò–º–±–∏—Ä—å –∫–æ—Ä–µ–Ω—å"],
            "–ó–µ–ª–µ–Ω—å": ["–ú—è—Ç–∞", "–†–æ–∑–º–∞—Ä–∏–Ω –≤–µ—Ç–∫–∏"],
            "–ë–∞–∫–∞–ª–µ—è": [
                "–°–∞—Ö–∞—Ä", "–ß–∞–π —á—ë—Ä–Ω—ã–π", "–ß–∞–π –∑–µ–ª—ë–Ω—ã–π", "–ß–µ—Ä–Ω—ã–π —á–∞–π", "–ú–µ–¥", "–ú—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö",
                "–ß–µ—Ä–Ω—ã–π –º–æ–ª–æ—Ç—ã–π –ø–µ—Ä–µ—Ü", "–°–∞—Ö–∞—Ä –ø–∞–∫–µ—Ç–∏–∫–∏", "–°–∞—Ö–∞—Ä–Ω—ã–µ —Å—Ç–∏–∫–∏", "–õ—ë–¥", "–°—Ç–∏–∫–µ—Ä—ã –¥–ª—è –¥–æ—Å–∫–∏"
            ],
            "–ù–∞–ø–∏—Ç–∫–∏": [
                "–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω 0.5", "–ö–æ–ª–∞ 0.5", "–§–∞–Ω—Ç–∞ 0.5", "–°–ø—Ä–∞–π—Ç 0.5", "18+ 0.5", "–í–æ–¥–∞ –±–µ–∑ –≥–∞–∑–∞ 0.5", "–í–æ–¥–∞ c –≥–∞–∑–æ–º 0.5",
                "–†–µ–¥ –ë—É–ª–ª 0.25", "–°–ø—Ä–∞–π—Ç 1.5–ª", "–°–æ–∫ –≤ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–µ", "–í–æ–¥–∞ 10–ª"
            ],
            "–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è": ["–ë—É–º–∞–≥–∞ –ê4", "–¢–µ—Ä–º–æ–±—É–º–∞–≥–∞ –¥–ª—è —á–µ–∫–æ–≤ –±–æ–ª—å—à–∞—è", "–°—Ç–∏–∫–µ—Ä—ã"],
            "–°–Ω–µ–∫–∏": ["–®–æ–∫–æ–ª–∞–¥ Alpen Gold (—Ä–∞–∑–Ω—ã–µ)", "–ß–æ–∫–æ–ø–∞–π", "–û—Ä–µ–æ", "–ë–∞—Ä–Ω–∏", "–ö–∞–∫–∞–æ"],
            "–°–ø–µ—Ü–∏–∏": ["–ö–∞—Ä–¥–∞–º–æ–Ω", "–ë–∞–¥—å—è–Ω (–∑–≤—ë–∑–¥–æ—á–∫–∞)", "–ü–∞–ª–æ—á–∫–∏ –∫–æ—Ä–∏—Ü—ã", "–ì–≤–æ–∑–¥–∏–∫–∞", "–®–∞–ª—Ñ–µ–π", "–ó–≤–µ—Ä–æ–±–æ–π", "–¢—Ä–∞–≤–∞ –î—É—à–∏—Ü–∞"]
        },
        kitchen: {
            "–ú—è—Å–æ": [
                "–ì–æ–≤—è–¥–∏–Ω–∞", "–ö—É—Ä–∏–Ω—ã–µ –±—ë–¥—Ä–∞", "–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ", "–ö—É—Ä–∏–Ω–∞—è –≥–æ–ª–µ–Ω—å", 
                "–ö—É—Ä–∏–Ω—ã–µ –∫—Ä—ã–ª—ã—à–∫–∏", "–ì–æ–≤—è–∂–∏–π —Ñ–∞—Ä—à", "–ò–Ω–¥–µ–π–∫–∞", "–ö–æ–ø—á—ë–Ω–∞—è –≥–æ–≤—è–¥–∏–Ω–∞", 
                "–°–æ—Å–∏—Å–∫–∏", "–°–∞–ª—è–º–∏",
            ],
            "–§—Ä—É–∫—Ç—ã/–æ–≤–æ—â–∏": [
                "–ú–æ—Ä–∫–æ–≤—å", "–õ—É–∫", "–õ—É–∫ —à–∞–ª–æ—Ç", "–ö–∞—Ä—Ç–æ—à–∫–∞", "–ü–æ–º–∏–¥–æ—Ä—ã", "–ß–µ—Å–Ω–æ–∫", "–ë–∞–∫–ª–∞–∂–∞–Ω—ã",
                "–î–∞–π–∫–æ–Ω", "–°–≤–µ–∫–ª–∞", "–û–≥—É—Ä—Ü—ã", "–ö–∞–ø—É—Å—Ç–∞", "–ë–æ–ª–≥–∞—Ä—Å–∫–∏–π –ø–µ—Ä–µ—Ü", 
                "–®–∞–º–ø–∏–Ω—å–æ–Ω—ã", "–ë–æ–ª–≥–∞—Ä—Å–∫–∏–π —Å–≤–µ—Ç–æ—Ñ–æ—Ä", "–õ–∏–º–æ–Ω—ã", "–ê–ø–µ–ª—å—Å–∏–Ω—ã", "–Ø–±–ª–æ–∫–∏"
            ],
            "–ó–µ–ª–µ–Ω—å": [
                "–õ–∞—Ç—É–∫", "–õ–æ–ª–ª–æ —Ä–æ—Å—Å–∞", "–ü–µ—Ç—Ä—É—à–∫–∞", "–£–∫—Ä–æ–ø", "–ö–∏–Ω–∑–∞", "–°–∞–ª–∞—Ç –ê–π—Å–±–µ—Ä–≥", 
                "–ú—è—Ç–∞", "–†—É–∫–∫–æ–ª–∞", "–†–æ–∑–º–∞—Ä–∏–Ω", "–ó–µ–ª—ë–Ω—ã–π –ª—É–∫", 
                "–ú–∏–∫—Ä–æ –∑–µ–ª–µ–Ω—å"
            ],
            "–°–ø–µ—Ü–∏–∏": [
                "–ó–∏—Ä–∞", "–û—Ä–µ–≥–∞–Ω–æ", "–ß—ë—Ä–Ω—ã–π –º–æ–ª–æ—Ç—ã–π –ø–µ—Ä–µ—Ü", "–ö–æ—Ä–∏–∞–Ω–¥—Ä", "–¢–º–∏–Ω", 
                "–†–æ–∑–º–∞—Ä–∏–Ω —Å—É—Ö–æ–π", "–ì–æ—Ä—á–∏—Ü–∞", "–°—É—Ö–∞—è –∫–∏–Ω–∑–∞", "–õ–∞–≤—Ä–æ–≤—ã–π –ª–∏—Å—Ç"
            ],
            "–°–æ—É—Å–∞": [
                "–ß–∏–ª–∏ —Å–æ—É—Å", "–ë–∞—Ä–±–µ–∫—é —Å–æ—É—Å", "–°–æ—É—Å —Å—ã—Ä–Ω—ã–π", "–ë–∞–ª—å–∑–∞–º–∏—á–µ—Å–∫–∏–π —É–∫—Å—É—Å",
                "–°–æ—É—Å –æ—Ä–µ—Ö–æ–≤—ã–π", "–£–Ω–∞–≥–∏ —Å–æ—É—Å", "–ö–∏–º—á–∏ —Å–æ—É—Å",  "–¢–æ–±–∞—Å–∫–æ"
            ],
            "–ö—Ä—É–ø—ã": [
                "–†–∏—Å –ª–∞–∑–µ—Ä", "–ö—Ä–∞—Å–Ω–∞—è —Ñ–∞—Å–æ–ª—å", "–ì—Ä–µ—á–∫–∞", "–ú–∞—à", "–ß–µ—á–µ–≤–∏—Ü–∞", 
                "–§–µ—Ç—Ç—É—á–∏–Ω–∏", "–§–∞—Ä—Ñ–∞–ª–µ", "–°–ø–∞–≥–µ—Ç—Ç–∏", "–ú–∞–∫–∞—Ä–æ–Ω—ã"
            ],
            "–•–ª–µ–±": [
                "–õ–µ–ø—ë—à–∫–∏", "–õ–∞–≤–∞—à", "–ë–∞–≥–µ—Ç", "–ß–∏–∞–±–∞—Ç—Ç–∞", "–ë—É–ª–æ—á–∫–∞ –¥–ª—è –±—É—Ä–≥–µ—Ä–∞", "–¢–æ—Å—Ç–µ—Ä–Ω—ã–π —Ö–ª–µ–±"
            ],
            "–ë–∞–∫–∞–ª–µ—è": [
                "–Ø–π—Ü–∞", "–°–∞—Ö–∞—Ä", "–°–∞—Ö–∞—Ä–Ω—ã–µ –∫—É–±–∏–∫–∏", "–°–æ–ª—å", "–¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞", "–ö–µ—Ç—á—É–ø", 
                "–ú–∞–π–æ–Ω–µ–∑", "–°–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ", "–©–µ–¥—Ä–æ–µ –ª–µ—Ç–æ", "–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ", "–§—Ä–∏—Ç—é—Ä–Ω–æ–µ –º–∞—Å–ª–æ", 
                "–ö—É–Ω–∂—É—Ç–Ω–æ–µ –º–∞—Å–ª–æ", "–ñ–∏—Ä", "–ü–µ—Ä–µ–ø–µ–ª–∏–Ω—ã–µ —è–π—Ü–∞", "–ö—É—Ä–∏–Ω—ã–µ —è–π—Ü–∞",
                "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ–∫", "–°–æ—è", "–§–∞—Å–æ–ª—å –∫–æ–Ω—Å–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–∞—è", "–ö—É–∫—É—Ä—É–∑–∞ –∫–æ–Ω—Å–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–∞—è",
                "–ö—Ä–∞—Å–Ω–∞—è –∏–∫—Ä–∞",
            ],
            "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã": [
                "–ú–æ–ª–æ–∫–æ", "–°–ª–∏–≤–∫–∏", "–§–µ—Ç–∞–∫—Å–∞", "–¢–≤–æ—Ä–æ–≥", "–ì–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π —Å—ã—Ä", "–ì–∞—É–¥–∞ —Å—ã—Ä", 
                "–ü–∞—Ä–º–µ–∑–∞–Ω", "–í–∏–æ–ª–∞ —Å—ã—Ä", "–¢–≤–æ—Ä–æ–∂–Ω—ã–π —Å—ã—Ä", "–ß–∏–∑ —Å—ã—Ä (–ø–ª–∞—Å—Ç–∏–Ω–∫–∏)", "–°—ã—Ä –º–æ—Ü–∞—Ä–µ–ª–ª–∞"
            ],
            "–ü—Ä–æ—á–µ–µ": [
                "–ù–∞–≤–≤–∞—Ç", "–•–∞–ª–≤–∞", "–ö—É—Ä–∞–≥–∞", "–§–∏–Ω–∏–∫–∏", "–ë–∞–Ω–∞–Ω —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç", "–°—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã",
                "–û—Ä–µ—Ö–∏", "–ê—Ä–∞—Ö–∏—Å", "–ö–∏—à-–º–∏—à", "–ú–∏–Ω–¥–∞–ª—å", "–ö—Ä–∞–±–æ–≤—ã–µ –ø–∞–ª–æ—á–∫–∏", "–ö—Ä–µ–≤–µ—Ç–∫–∏",
                "–ê–Ω—á–æ—É—Å—ã"
            ]
        },
        household: {
            "–•–æ–∑. —Ç–æ–≤–∞—Ä—ã": [
                "–ì–µ–ª—å –¥–ª—è –ø–æ—Å—É–¥—ã", "–ü–µ—Ä—á–∞—Ç–∫–∏ –∂—ë–ª—Ç—ã–µ –±–æ–ª—å—à–∏–µ", "–ü–∞–∫–µ—Ç—ã –¥–ª—è –º—É—Å–æ—Ä–∞ –±–æ–ª—å—à–∏–µ",
                "–ü–∞–∫–µ—Ç—ã –¥–ª—è –º—É—Å–æ—Ä–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ (50√ó65)", "–ì—É–±–∫–∏ –¥–ª—è –ø–æ—Å—É–¥—ã –±–æ–ª—å—à–∏–µ",
                "–ì—É–±–∫–∏ –¥–ª—è –ø–æ—Å—É–¥—ã –±–ª–µ—Å—Ç—è—â–∏–µ", "–ñ–∏–¥–∫–æ–µ –º—ã–ª–æ", "–ê–∑–µ–ª–∏—Ç",
                "–¢—Ä—è–ø–∫–∏ —Ü–≤–µ—Ç–Ω—ã–µ", "–û—Ç–±–µ–ª–∏–≤–∞—Ç–µ–ª—å", "–î–∏—Å–ø–µ–Ω—Å–µ—Ä–∫–∏ (—Å–∞–ª—Ñ–µ—Ç–∫–∏)",
                "–¢—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞ –ø—Ä–æ—Å—Ç–∞—è", "–¢—Ä—è–ø–∫–∞ –¥–µ–ª—å—Ñ–∏–Ω"
            ]
        }
    };

    tabs.forEach(tab => {
        tab.addEventListener("click", function () {
            tabs.forEach(t => t.classList.remove("active"));
            this.classList.add("active");
            currentWarehouse = this.dataset.warehouse.toUpperCase();
            localStorage.setItem("selectedWarehouse", currentWarehouse);
            updateCategories(this.dataset.warehouse);
        });
    });

    function updateCategories(warehouse) {
        categoriesContainer.innerHTML = "";
        Object.keys(products[warehouse]).forEach(category => {
            const div = document.createElement("div");
            div.classList.add("category");
            div.dataset.category = category;
            div.innerHTML = `<i class="fas fa-box"></i><p>${category}</p>`;
            div.addEventListener("click", () => loadProducts(warehouse, category));
            categoriesContainer.appendChild(div);
        });
    }

    function loadProducts(warehouse, category) {
        productList.innerHTML = "";
        productsSection.classList.remove("hidden");
    
        products[warehouse][category].forEach(product => {
            let defaultUnit = "—à—Ç";
            if (["–ú—è—Å–æ", "–§—Ä—É–∫—Ç—ã/–æ–≤–æ—â–∏"].includes(category)) {
                defaultUnit = "–∫–≥";
            } else if (["–ó–µ–ª–µ–Ω—å", "–°–ø–µ—Ü–∏–∏", "–ö—Ä—É–ø—ã"].includes(category)) {
                defaultUnit = "–≥—Ä";
            }
    
            const savedData = selectedItems[product] || { quantity: "", unit: defaultUnit };
    
            const li = document.createElement("li");
            li.innerHTML = `
                <div class="item-container">
                    <span class="product-name">${product}</span>
                    <input type="number" min="0" class="product-input" value="${savedData.quantity}" onfocus="this.value=''">
                    <select class="product-unit">
                        <option ${savedData.unit === "—à—Ç" ? "selected" : ""}>—à—Ç</option>
                        <option ${savedData.unit === "–∫–≥" ? "selected" : ""}>–∫–≥</option>
                        <option ${savedData.unit === "–≥—Ä" ? "selected" : ""}>–≥—Ä</option>
                        <option ${savedData.unit === "–ª" ? "selected" : ""}>–ª</option>
                        <option ${savedData.unit === "–ø–∞—á/—É–ø" ? "selected" : ""}>–ø–∞—á/—É–ø</option>
                    </select>
                </div>
            `;
    
            const input = li.querySelector(".product-input");
            const select = li.querySelector(".product-unit");
    
            input.addEventListener("input", () => saveSelection(product, category, input.value, select.value));
            select.addEventListener("change", () => saveSelection(product, category, input.value, select.value));
    
            productList.appendChild(li);
        });
    }    
    function saveSelection(product, category, quantity, unit) {
        if (quantity > 0) {
            selectedItems[product] = { category, quantity, unit };
        } else {
            delete selectedItems[product];
        }
    }

    sendButton.addEventListener("click", () => {
        const items = Object.keys(selectedItems).map(name => ({
            name,
            category: selectedItems[name].category,
            quantity: selectedItems[name].quantity,
            unit: selectedItems[name].unit
        }));

        if (items.length === 0) {
            alert("‚ö†Ô∏è –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä—ã!");
            return;
        }

        console.log("üì¶ –ò—Ç–æ–≥–æ–≤—ã–π –∑–∞–∫–∞–∑:", { warehouse: currentWarehouse, items });
        loader.style.display = "flex";


        setTimeout(() => {
            fetch("https://frontend-developer.uz/sendzakup.php", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ warehouse: currentWarehouse, items })
            })
            .then(response => response.text())
            .then(data => {
                console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
                alert("‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
                setTimeout(() => {
                    loader.style.display = "none";
                    location.reload();
                }, 500);
            })
            .catch(error => {
                alert("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞!");
                console.error("–û—à–∏–±–∫–∞:", error);
                loader.style.display = "none";
            });
        }, 1000);
    });

    document.querySelector(`.tab[data-warehouse="${currentWarehouse.toLowerCase()}"]`).classList.add("active");
    updateCategories(currentWarehouse.toLowerCase());
});
